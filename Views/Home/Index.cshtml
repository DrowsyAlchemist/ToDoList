@using ToDoList.Models
@using ToDoList.ViewModels
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model IndexViewModel

@{
    var parms = new Dictionary<string, string>
            {
                { "lablePart", Model.FilterViewModel.LablePart },
                { "selectedDateScope", Model.FilterViewModel.SelectedDateScope.ToString() },
                { "selectedStatus", (Model.FilterViewModel.SelectedStatus.HasValue)?Model.FilterViewModel.SelectedStatus.Value.ToString():"null" },
                { "selectedPriority",(Model.FilterViewModel.SelectedPriority.HasValue)?Model.FilterViewModel.SelectedPriority.Value.ToString():"null" },
                { "sortState", Model.SortViewModel.Current.ToString() },
                { "pageNumber", Model.PageViewModel.PageNumber.ToString()}
            };
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>ToDoList</title>

    <style>
        td {
            padding: 10px;
        }

        h2, p {
            padding: 10px 40px;
        }
    </style>
</head>
<body>

    <div>
        @if (Model.UserRole == Role.Admin)
        {
            <a style="margin: 10px" href="/Admin/Index">Admin Page</a>
        }
    </div>

    <div style="margin-bottom:20px">
        <h2 style="display: inline">To Do List</h2>
        <span><a href="/Home/CreateTask">Add</a></span>
    </div>

    <div style="margin: 10px">
        <form asp-action="Index" asp-route-sortState="@Model.SortViewModel.Current.ToString()" style="display:inline">
            <label>Название</label>
            <input asp-for="FilterViewModel.LablePart" value="@Model.FilterViewModel.LablePart" />

            <label>Статус: </label>
            <select asp-for="FilterViewModel.SelectedStatus" asp-items="@Model.FilterViewModel.Status"></select>

            <label>Дата: </label>
            <select asp-for="FilterViewModel.SelectedDateScope" asp-items="@Model.FilterViewModel.Data"></select>

            <label>Приоритет: </label>
            <select asp-for="FilterViewModel.SelectedPriority" asp-items="Model.FilterViewModel.Priority"></select>

            <input type="submit" value="Apply" />
        </form>

        <form asp-action="Index" asp-route-sortState="@(Model.SortViewModel.Current)" style="display:inline">
            <input type="submit" value="Reset" />
        </form>
    </div>

    <form style="margin: 10px"
          asp-action="SetPageSize"
          asp-all-route-data="parms">

        <label>Page size:</label>
        <input value="@Model.PageViewModel.ItemsPerPage"
               type="number"
               name="pageSize" />

        <input type="submit" value="Apply" />
    </form>

    @if (Model == null || Model.Tasks.Count() == 0)
    {
        <p>You haven't got anything to do.</p>
    }
    else
    {
        <table>
            <tr>
                <td>Id</td>
                <td>
                    <a asp-action="Index"
                       asp-all-route-data="parms"
                       asp-route-sortState="@Model.SortViewModel.LableSort">
                        Lable
                    </a>
                </td>
                <td>
                    <a asp-action="Index"
                       asp-all-route-data="parms"
                       asp-route-sortState="@(Model.SortViewModel.DateSort)">
                        Date
                    </a>
                </td>
                <td>Status</td>
                <td>
                    <a asp-action="Index"
                       asp-all-route-data="parms"
                       asp-route-sortState="@(Model.SortViewModel.PrioritySort)">
                        Priority
                    </a>
                </td>
                <td>Description</td>
            </tr>

            @foreach (var task in Model.Tasks)
            {
                <tr>
                    <td>@task.Id</td>
                    <td>@task.Lable</td>
                    <td>@task.ExpiresDate</td>
                    <td>@task.Status</td>
                    <td>@task.Priority</td>
                    <td>@task.Description</td>
                    <td>
                        @Html.ActionLink("Edit", "EditTask", "Home", task)
                    </td>
                    <td>
                        @Html.ActionLink("Delete", "DeleteTask", "Home", task)
                    </td>
                </tr>
            }
        </table>

        <div style="margin:10px">
            @for (int i = 1; i <= Model.PageViewModel.TotalPages; i++)
            {
                <a asp-action="Index"
                   asp-all-route-data="parms"
                   asp-route-sortState="@Model.SortViewModel.Current.ToString()"
                   asp-route-pageNumber="@i">
                    @i
                </a>
            }
        </div>
    }

</body>
</html>