@using ToDoList.Models
@using ToDoList.ViewModels
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, ToDoList
@model IndexViewModel

@{
    var parms = new Dictionary<string, string>
            {
                { "FilterViewModel.LablePart", Model.FilterViewModel.LablePart },
                { "FilterViewModel.SelectedDateScope", Model.FilterViewModel.SelectedDateScope.ToString() },
                { "FilterViewModel.SelectedStatus", (Model.FilterViewModel.SelectedStatus.HasValue)?Model.FilterViewModel.SelectedStatus.Value.ToString():"null" },
                { "FilterViewModel.SelectedPriority",(Model.FilterViewModel.SelectedPriority.HasValue)?Model.FilterViewModel.SelectedPriority.Value.ToString():"null" },
                { "sortState", Model.SortViewModel.Current.ToString() },
                { "PageViewModel.PageNumber", Model.PageViewModel.PageNumber.ToString() },
                { "PageViewModel.ItemsCount", Model.Tasks.Count().ToString()},
                { "PageViewModel.ItemsPerPage", Model.PageViewModel.ItemsPerPage.ToString()},
            };
    var viewModel = Model;
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />

<style>
    td, th {
        padding: 10px;
    }

    .glyphicon {
        border: solid black;
        border-width: 0 3px 3px 0;
        display: inline-block;
        padding: 3px;
        margin: 0 5px;
    }

    .glyphicon-chevron-down {
        transform: rotate(45deg);
        -webkit-transform: rotate(45deg);
    }

    .glyphicon-chevron-up {
        transform: rotate(-135deg);
        -webkit-transform: rotate(-135deg);
    }
</style>

<div style="margin: 10px">
    <form asp-action="Index" asp-all-route-data="parms" style="display:inline">
        <label>Название</label>
        <input asp-for="FilterViewModel.LablePart" value="@Model.FilterViewModel.LablePart" />

        <label>Статус: </label>
        <select asp-for="FilterViewModel.SelectedStatus" asp-items="@Model.FilterViewModel.Status"></select>

        <label>Дата: </label>
        <select asp-for="FilterViewModel.SelectedDateScope" asp-items="@Model.FilterViewModel.Data"></select>

        <label>Приоритет: </label>
        <select asp-for="FilterViewModel.SelectedPriority" asp-items="Model.FilterViewModel.Priority"></select>

        <input type="submit" value="Apply" />
    </form>

    <form asp-action="Index" asp-route-sortState="@(Model.SortViewModel.Current)" style="display:inline">
        <input type="submit" value="Reset" />
    </form>
</div>

<form style="margin: 10px"
      asp-action="SetPageSize"
      asp-all-route-data="parms">

    <label>Page size:</label>
    <input value="@Model.PageViewModel.ItemsPerPage"
           type="number"
           name="pageSize" />

    <input type="submit" value="Apply" />
</form>

@if (Model == null || Model.Tasks.Count() == 0)
{
        <p>You haven't got anything to do.</p>
}
else
{
        <table>
            <tr>
                <td>Id</td>
                <td>
                    <sort action="Index"
                          page-url-values="parms"
                          this-sort-state="@Model.SortViewModel.LableSort"
                          selected-sort-state="@Model.SortViewModel.Next"
                          is-asc="@Model.SortViewModel.IsAsc">
                        Lable
                    </sort>
                </td>
                <td>
                    <sort action="Index"
                          page-url-values="parms"
                          this-sort-state="@Model.SortViewModel.DateSort"
                          selected-sort-state="@Model.SortViewModel.Next"
                          is-asc="@Model.SortViewModel.IsAsc">
                        Date
                    </sort>
                </td>
                <td>Status</td>
                <td>
                    <sort action="Index"
                          page-url-values="parms"
                          this-sort-state="@Model.SortViewModel.PrioritySort"
                          selected-sort-state="@Model.SortViewModel.Next"
                          is-asc="@Model.SortViewModel.IsAsc">
                        Priority
                    </sort>
                </td>
                <td>Description</td>
            </tr>

        @foreach (var task in Model.Tasks)
        {
                    <tr>
                        <td>@task.Id</td>
                        <td>@task.Lable</td>
                        <td>@task.ExpiresDate</td>
                        <td>@task.Status</td>
                        <td>@task.Priority</td>
                        <td>@task.Description</td>
                @if (Model.CanEditTasks)
                {
                                <td>
                        @Html.ActionLink("Edit", "EditTask", "Home", task)
                                </td>
                                <td>
                        @Html.ActionLink("Delete", "DeleteTask", "Home", task)
                                </td>
                }
                    </tr>
        }
        </table>

        <page-link page-action="Index"
                   page-model="@Model.PageViewModel"
                   page-url-values="parms">
        </page-link>
}